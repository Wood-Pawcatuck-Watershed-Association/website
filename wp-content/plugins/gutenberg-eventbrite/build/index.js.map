{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/EditBlock.js","webpack:///./src/index.js","webpack:///external {\"this\":[\"wp\",\"blockEditor\"]}","webpack:///external {\"this\":[\"wp\",\"blocks\"]}","webpack:///external {\"this\":[\"wp\",\"components\"]}","webpack:///external {\"this\":[\"wp\",\"element\"]}","webpack:///external {\"this\":[\"wp\",\"i18n\"]}"],"names":["EditBlock","attributes","setAttributes","apiKey","heading","newApiKey","newHeading","registerBlockType","title","__","description","category","icon","supports","html","type","edit","props","save"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import { Fragment } from \"@wordpress/element\";\nimport { TextControl, PanelBody } from \"@wordpress/components\";\nimport { InspectorControls } from \"@wordpress/block-editor\";\n\nexport default function EditBlock({ attributes, setAttributes }) {\n\tconst { apiKey, heading } = attributes;\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Fragment>\n\t\t\t\t<InspectorControls>\n\t\t\t\t\t<PanelBody title=\"Eventbrite Settings\" initialOpen={true}>\n\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\tlabel=\"Api Key\"\n\t\t\t\t\t\t\tvalue={apiKey}\n\t\t\t\t\t\t\thelp={\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tGet api key{\" \"}\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\thref=\"https://www.eventbrite.com/platform/api-keys\"\n\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\there\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonChange={newApiKey => setAttributes({ apiKey: newApiKey })}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</InspectorControls>\n\t\t\t</Fragment>\n\n\t\t\t<TextControl\n\t\t\t\tlabel=\"heading\"\n\t\t\t\tvalue={heading}\n\t\t\t\tonChange={newHeading => setAttributes({ heading: newHeading })}\n\t\t\t/>\n\t\t</Fragment>\n\t);\n}\n","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\nimport { registerBlockType } from \"@wordpress/blocks\";\nimport EditBlock from \"./components/EditBlock\";\n\n/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\nimport { __ } from \"@wordpress/i18n\";\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\nregisterBlockType(\"create-block/gutenberg-eventbrite\", {\n\t/**\n\t * This is the display title for your block, which can be translated with `i18n` functions.\n\t * The block inserter will show this name.\n\t */\n\ttitle: __(\"Gutenberg Eventbrite\", \"create-block\"),\n\n\t/**\n\t * This is a short description for your block, can be translated with `i18n` functions.\n\t * It will be shown in the Block Tab in the Settings Sidebar.\n\t */\n\tdescription: __(\n\t\t\"A gutenberg block that fetches eventbrite events\",\n\t\t\"create-block\"\n\t),\n\n\t/**\n\t * Blocks are grouped into categories to help users browse and discover them.\n\t * The categories provided by core are `common`, `embed`, `formatting`, `layout` and `widgets`.\n\t */\n\tcategory: \"widgets\",\n\n\t/**\n\t * An icon property should be specified to make it easier to identify a block.\n\t * These can be any of WordPressâ€™ Dashicons, or a custom svg element.\n\t */\n\ticon: \"smiley\",\n\n\t/**\n\t * Optional block extended support features.\n\t */\n\tsupports: {\n\t\t// Removes support for an HTML mode.\n\t\thtml: false\n\t},\n\n\tattributes: {\n\t\tapiKey: {\n\t\t\ttype: \"string\"\n\t\t},\n\t\theading: {\n\t\t\ttype: \"string\"\n\t\t}\n\t},\n\n\t/**\n\t * The edit function describes the structure of your block in the context of the editor.\n\t * This represents what the editor will render when the block is used.\n\t *\n\t * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#edit\n\t *\n\t * @param {Object} [props] Properties passed from the editor.\n\t *\n\t * @return {WPElement} Element to render.\n\t */\n\tedit(props) {\n\t\treturn <EditBlock {...props} />;\n\t},\n\n\t/**\n\t * The save function defines the way in which the different attributes should be combined\n\t * into the final markup, which is then serialized by the block editor into `post_content`.\n\t *\n\t * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#save\n\t *\n\t * @return {WPElement} Element to render.\n\t */\n\tsave() {\n\t\treturn null;\n\t}\n});\n","(function() { module.exports = this[\"wp\"][\"blockEditor\"]; }());","(function() { module.exports = this[\"wp\"][\"blocks\"]; }());","(function() { module.exports = this[\"wp\"][\"components\"]; }());","(function() { module.exports = this[\"wp\"][\"element\"]; }());","(function() { module.exports = this[\"wp\"][\"i18n\"]; }());"],"sourceRoot":""}